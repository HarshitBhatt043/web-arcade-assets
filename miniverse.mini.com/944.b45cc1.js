/*! For license information please see 944.b45cc1.js.LICENSE.txt */
(()=>{var t={33256:t=>{var e={common:{lineHeight:46,base:31,scaleW:256,scaleH:256},info:{size:38,charset:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","1","2","3","4","5","6","7","8","9","0","Ä","Ö","Ü","ä","ö","ü","ß"," ","?","!",":",".","_","-",",","'",'"'],stretchH:100,padding:[2,2,2,2],spacing:[0,0]},kernings:[[65,65,1],[65,67,0],[65,71,0],[65,74,1],[65,79,0],[65,81,0],[65,83,0],[65,84,-2],[65,85,0],[65,86,-1],[65,87,-1],[65,88,1],[65,89,-2],[65,90,0],[65,99,0],[65,100,0],[65,101,0],[65,102,0],[65,111,0],[65,113,0],[65,115,0],[65,120,1],[65,122,0],[65,196,1],[65,214,0],[65,220,0],[65,246,0],[65,63,0],[65,46,2],[65,44,2],[66,74,0],[66,84,-1],[66,86,0],[66,88,0],[66,89,0],[66,90,0],[66,118,0],[66,119,0],[66,58,0],[66,46,0],[66,44,0],[67,65,0],[67,89,0],[67,118,0],[67,119,0],[67,196,0],[67,58,0],[67,46,-1],[67,44,-1],[68,65,0],[68,84,-1],[68,86,-1],[68,88,0],[68,89,0],[68,90,0],[68,118,0],[68,119,0],[68,121,0],[68,196,0],[68,46,-1],[68,44,-1],[69,74,0],[69,102,-1],[69,118,0],[69,119,0],[69,121,0],[69,46,0],[69,44,0],[70,65,-2],[70,74,-2],[70,87,0],[70,88,0],[70,89,0],[70,90,0],[70,97,-1],[70,99,-1],[70,100,-1],[70,101,-1],[70,103,-1],[70,109,0],[70,110,0],[70,111,-1],[70,112,0],[70,113,-1],[70,114,0],[70,115,0],[70,117,0],[70,120,0],[70,122,0],[70,196,-2],[70,228,-1],[70,246,-1],[70,252,0],[70,58,-1],[70,46,-2],[70,44,-2],[71,65,-1],[71,86,0],[71,88,0],[71,118,0],[71,119,0],[71,121,0],[71,196,-1],[72,63,0],[73,63,0],[75,65,1],[75,67,-1],[75,71,-1],[75,79,-1],[75,81,-1],[75,83,0],[75,85,-1],[75,86,0],[75,87,0],[75,88,2],[75,89,0],[75,97,0],[75,99,0],[75,100,0],[75,101,0],[75,102,-1],[75,103,0],[75,111,0],[75,113,0],[75,115,0],[75,116,-1],[75,117,0],[75,118,0],[75,119,0],[75,120,1],[75,121,0],[75,196,1],[75,214,-1],[75,220,-1],[75,228,0],[75,246,0],[75,252,0],[75,58,1],[76,65,1],[76,67,0],[76,71,0],[76,74,1],[76,79,0],[76,81,0],[76,84,-3],[76,85,0],[76,86,-1],[76,87,-1],[76,88,0],[76,89,-3],[76,102,0],[76,116,0],[76,118,0],[76,119,0],[76,120,0],[76,121,0],[76,196,1],[76,214,0],[76,220,0],[76,63,-2],[76,46,0],[76,44,0],[77,63,0],[78,63,0],[79,65,0],[79,84,-1],[79,86,-1],[79,88,0],[79,89,0],[79,90,0],[79,118,0],[79,119,0],[79,121,0],[79,196,0],[79,46,-1],[79,44,-1],[80,65,-2],[80,67,0],[80,71,0],[80,74,-3],[80,79,0],[80,81,0],[80,88,0],[80,90,0],[80,97,0],[80,99,0],[80,100,0],[80,101,0],[80,103,-1],[80,111,0],[80,113,0],[80,115,0],[80,118,0],[80,119,0],[80,120,0],[80,122,0],[80,196,-2],[80,214,0],[80,228,0],[80,246,0],[80,58,0],[80,46,-5],[80,44,-5],[81,65,0],[81,84,-1],[81,86,-1],[81,88,0],[81,89,0],[81,90,0],[81,118,0],[81,119,0],[81,121,0],[81,196,0],[81,46,-1],[81,44,-1],[82,84,0],[82,86,0],[82,89,-1],[82,90,0],[82,99,0],[82,100,0],[82,101,0],[82,103,0],[82,111,0],[82,113,0],[82,118,0],[82,119,0],[82,121,0],[82,246,0],[83,74,1],[83,84,0],[83,86,0],[83,89,0],[83,90,0],[83,120,0],[83,46,0],[83,44,0],[84,65,-2],[84,67,0],[84,71,0],[84,74,-3],[84,79,0],[84,81,0],[84,83,0],[84,86,0],[84,87,0],[84,88,0],[84,89,0],[84,90,0],[84,97,-1],[84,99,-2],[84,100,-2],[84,101,-2],[84,102,-1],[84,103,-1],[84,111,-2],[84,113,-2],[84,115,-1],[84,116,0],[84,117,-1],[84,118,0],[84,120,-1],[84,121,-1],[84,122,-1],[84,196,-2],[84,214,0],[84,228,-1],[84,246,-2],[84,252,-1],[84,58,-2],[84,46,-4],[84,45,-1],[84,44,-4],[85,65,-1],[85,83,0],[85,90,0],[85,97,0],[85,196,-1],[85,228,0],[85,46,-1],[85,44,-1],[86,65,-1],[86,67,-1],[86,71,-1],[86,74,-2],[86,79,-1],[86,81,-1],[86,84,0],[86,86,0],[86,87,0],[86,88,0],[86,89,0],[86,90,0],[86,97,0],[86,99,-1],[86,100,-1],[86,101,-1],[86,103,0],[86,111,-1],[86,113,-1],[86,115,0],[86,196,-1],[86,214,-1],[86,228,0],[86,246,-1],[86,58,-1],[86,46,-3],[86,45,-1],[86,44,-3],[87,65,-1],[87,74,0],[87,84,0],[87,86,0],[87,87,0],[87,88,0],[87,90,0],[87,97,0],[87,99,-1],[87,100,-1],[87,101,-1],[87,111,-1],[87,113,-1],[87,119,0],[87,120,0],[87,121,0],[87,196,-1],[87,228,0],[87,246,-1],[87,58,-2],[87,46,-3],[87,45,-1],[87,44,-3],[88,65,1],[88,67,0],[88,71,0],[88,79,0],[88,81,0],[88,84,0],[88,86,0],[88,87,0],[88,88,1],[88,89,0],[88,120,1],[88,196,1],[88,214,0],[88,58,1],[88,46,1],[88,45,-1],[88,44,1],[89,65,-2],[89,67,0],[89,71,0],[89,74,-2],[89,79,0],[89,81,0],[89,83,0],[89,84,0],[89,86,0],[89,87,0],[89,88,0],[89,89,1],[89,90,0],[89,97,-2],[89,99,-2],[89,100,-2],[89,101,-2],[89,103,-1],[89,109,-1],[89,110,-1],[89,111,-2],[89,112,-1],[89,113,-2],[89,114,-1],[89,115,-1],[89,117,-1],[89,120,0],[89,122,-1],[89,196,-2],[89,214,0],[89,228,-2],[89,246,-2],[89,252,-1],[89,58,-3],[89,46,-5],[89,45,-3],[89,44,-5],[90,65,0],[90,67,0],[90,71,0],[90,79,0],[90,81,0],[90,83,0],[90,90,0],[90,99,0],[90,100,0],[90,101,0],[90,111,0],[90,113,0],[90,116,0],[90,121,0],[90,196,0],[90,214,0],[90,246,0],[90,46,0],[90,45,-1],[90,44,0],[97,63,0],[98,118,0],[98,120,0],[98,63,-1],[98,46,-1],[98,95,-1],[98,44,-1],[99,118,0],[99,119,0],[99,121,0],[99,122,0],[99,55,-2],[101,120,0],[101,122,0],[102,97,0],[102,99,0],[102,100,0],[102,101,0],[102,103,-1],[102,111,0],[102,113,0],[102,115,0],[102,118,0],[102,119,0],[102,121,0],[102,228,0],[102,246,0],[102,33,1],[102,95,-2],[103,118,0],[103,119,0],[103,121,0],[103,95,2],[104,102,0],[104,118,0],[104,119,0],[104,121,0],[107,99,0],[107,100,0],[107,101,0],[107,103,0],[107,111,0],[107,113,0],[107,115,0],[107,118,0],[107,119,0],[107,120,1],[107,121,0],[107,246,0],[109,102,0],[109,118,0],[109,119,0],[109,121,0],[110,102,0],[110,118,0],[110,119,0],[110,121,0],[111,118,0],[111,120,0],[111,63,-1],[111,46,-1],[111,95,-1],[111,44,-1],[112,118,0],[112,120,0],[112,63,-1],[112,46,-1],[112,95,-1],[112,44,-1],[113,102,0],[113,118,0],[113,119,0],[113,121,0],[114,99,0],[114,100,0],[114,101,0],[114,102,0],[114,103,0],[114,111,0],[114,113,0],[114,118,0],[114,119,0],[114,121,0],[114,246,0],[114,46,-2],[114,44,-2],[115,120,0],[116,63,1],[118,99,0],[118,100,0],[118,101,0],[118,102,0],[118,109,0],[118,110,0],[118,111,0],[118,112,0],[118,113,0],[118,114,0],[118,118,1],[118,119,1],[118,121,1],[118,122,0],[118,246,0],[118,46,-3],[118,95,-1],[118,45,-1],[118,44,-3],[119,97,0],[119,102,0],[119,109,0],[119,110,0],[119,112,0],[119,114,0],[119,116,0],[119,118,0],[119,119,1],[119,121,1],[119,228,0],[119,46,-2],[119,95,-1],[119,45,-1],[119,44,-2],[120,99,0],[120,100,0],[120,101,0],[120,111,0],[120,113,0],[120,118,0],[120,120,0],[120,121,0],[120,246,0],[120,45,-1],[121,97,0],[121,99,0],[121,100,0],[121,101,0],[121,102,0],[121,109,0],[121,110,0],[121,111,0],[121,112,0],[121,113,0],[121,114,0],[121,118,1],[121,119,0],[121,120,0],[121,121,1],[121,122,0],[121,228,0],[121,246,0],[121,46,-3],[121,95,-2],[121,45,0],[121,44,-3],[122,118,0],[122,119,0],[122,120,0],[55,52,-2],[55,58,-2],[55,46,-5],[55,44,-5],[48,95,-1],[196,65,1],[196,67,0],[196,71,0],[196,74,1],[196,79,0],[196,81,0],[196,83,0],[196,84,-2],[196,85,0],[196,86,-1],[196,87,-1],[196,88,1],[196,89,-2],[196,90,0],[196,99,0],[196,100,0],[196,101,0],[196,102,0],[196,111,0],[196,113,0],[196,115,0],[196,120,1],[196,122,0],[196,196,1],[196,214,0],[196,220,0],[196,246,0],[196,63,0],[196,46,2],[196,44,2],[214,65,0],[214,84,-1],[214,86,-1],[214,88,0],[214,89,0],[214,90,0],[214,118,0],[214,119,0],[214,121,0],[214,196,0],[214,46,-1],[214,44,-1],[220,65,-1],[220,83,0],[220,90,0],[220,97,0],[220,196,-1],[220,228,0],[220,46,-1],[220,44,-1],[228,63,0],[246,118,0],[246,120,0],[246,63,-1],[246,46,-1],[246,95,-1],[246,44,-1],[223,120,0],[95,48,-1],[45,84,-2],[45,86,-1],[45,87,-1],[45,88,-1],[45,89,-2],[45,118,-1],[45,119,-1],[45,120,-2],[45,121,0],[45,122,-1]],chars:[[81,2,2,26,37,-1,5,25],[106,2,43,11,37,-3,5,9],[196,2,84,27,37,-2,-2,23],[214,17,43,26,37,-1,-2,25],[220,32,2,23,37,1,-2,24],[87,2,125,35,30,-2,5,32],[65,33,84,27,30,-2,5,23],[66,47,43,23,30,1,5,24],[67,59,2,25,30,-1,5,24],[68,2,159,24,30,1,5,25],[69,2,193,21,30,1,5,21],[70,27,193,21,30,1,5,21],[71,30,159,25,30,-1,5,24],[72,41,118,23,30,1,5,25],[73,64,77,8,30,1,5,9],[74,74,36,19,30,-2,5,17],[75,88,2,24,30,1,5,23],[76,52,193,20,30,1,5,19],[77,59,152,28,30,1,5,30],[78,68,111,23,30,1,5,25],[79,76,70,26,30,-1,5,25],[80,97,36,23,30,1,5,23],[82,116,2,24,30,1,5,24],[83,76,186,23,30,-1,5,22],[84,76,220,23,30,-1,5,20],[85,91,145,23,30,1,5,24],[86,95,104,25,30,-2,5,21],[88,106,70,25,30,-2,5,21],[89,124,36,25,30,-2,5,21],[90,144,2,22,30,-1,5,21],[98,103,179,20,30,1,5,20],[100,118,138,20,30,-1,5,20],[102,124,104,14,30,-1,5,12],[103,135,70,20,30,-1,12,20],[104,153,36,19,30,1,5,19],[105,170,2,8,30,1,5,9],[107,103,213,20,30,1,5,18],[108,127,172,10,30,0,5,9],[112,127,206,20,30,1,12,20],[113,141,172,20,30,-1,12,20],[50,151,206,20,30,-1,5,19],[51,142,104,21,30,-1,5,20],[53,159,70,21,30,0,6,20],[54,142,138,21,30,0,5,20],[56,176,36,21,30,0,5,21],[57,165,172,21,30,0,5,20],[48,182,2,22,30,0,5,21],[228,175,206,21,30,0,5,19],[246,208,2,20,30,-1,5,19],[252,232,2,19,30,0,5,19],[223,201,36,20,30,1,5,20],[63,225,36,19,30,-1,5,17],[33,167,104,8,30,1,5,10],[116,167,138,14,29,-1,6,12],[121,179,104,21,29,-2,13,17],[49,184,70,13,29,2,6,18],[52,201,70,23,29,-1,6,22],[55,185,137,20,29,-1,6,18],[109,2,227,28,23,1,12,29],[119,34,227,28,22,-2,13,25],[97,228,70,21,23,0,12,19],[99,228,97,20,23,-1,12,18],[101,204,103,20,23,-1,12,19],[110,228,124,19,23,1,12,19],[111,190,170,20,23,-1,12,19],[114,209,130,14,23,1,12,12],[115,227,151,18,23,-1,12,17],[117,214,178,19,23,0,13,19],[118,200,205,21,22,-2,13,17],[120,200,231,21,22,-2,13,18],[122,225,205,18,22,-1,13,17],[58,237,178,8,22,1,13,11],[95,103,247,21,7,-2,33,17],[45,128,240,16,7,1,19,17],[44,148,240,10,13,-1,26,10],[34,162,240,13,12,1,5,15],[39,247,204,7,12,1,5,9],[46,209,157,8,9,1,26,10],[32,64,111,0,0,-2,31,10]],pages:[]};e.chars=e.chars.map((function(t){return{id:t[0],x:t[1],y:t[2],width:t[3],height:t[4],xoffset:t[5],yoffset:t[6],xadvance:t[7]}})),e.kernings=e.kernings.map((function(t){return{first:t[0],second:t[1],amount:t[2]}})),t.exports.L=e}},e={};function n(s){var i=e[s];if(void 0!==i)return i.exports;var r=e[s]={exports:{}};return t[s](r,r.exports,n),r.exports}(()=>{"use strict";const t=[{char:" ".charCodeAt(0),replace:"\n"},{char:"­".charCodeAt(0),replace:"–\n"},{char:"–".charCodeAt(0),replace:"–\n"},{char:"—".charCodeAt(0),replace:"—\n"},{char:"-".charCodeAt(0),replace:"-\n"}];class e{constructor(e){this.charCache={},this.breakCache=[];const{font:n,breakPoints:s=t,useKernings:i=!0}=e;this.breakPoints=s,this.useKernings=i,n.chars.forEach((t=>{this.charCache[t.id]=t.xadvance/n.info.size})),this.kernings=n.kernings.map((t=>({first:t.first,second:t.second,amount:t.amount/n.info.size}))),s.forEach((t=>{this.breakCache.push(t.char)}))}greedy(t,e){let n,s=0,i=0;for(;s<e;){const e=t.charCodeAt(i);if(isNaN(e))return[t,""];if(10===e)return[t.substr(0,i+1),t.substr(i+1)];s+=this.getCharWidth(e,n),i+=1,n=e}const r=i;for(;i>=0;){const n=t.charCodeAt(i);if(this.breakCache.includes(n)){const s=this.breakPoints.find((t=>t.char===n)).replace,r=t.substr(0,i)+s;if(this.measure(r)<=e)return[r,t.substr(i+1)]}i-=1}return[`${t.substr(0,r)}\n`,t.substr(r)]}getCharWidth(t,e){let n=this.charCache[t]||0;if(9===t&&(n=this.tabWidth),this.useKernings&&e){const s=this.kernings.find((n=>n.first===e&&n.second===t));s&&(n+=s.amount)}return n+this.letterSpacing}wrap(t){const{text:e,width:n=10,letterSpacing:s=0,tabWidth:i=1}=t;this.letterSpacing=s,this.tabWidth=i;const r=[];let a=e;for(;a.length>0;){const t=this.greedy(a,n);r.push(t[0]),a=t[1]}return r.join("")}measure(t){let e,n=0;return t.split("").forEach((t=>{const s=t.charCodeAt(0);n+=this.getCharWidth(s,e),e=s})),n}}function s(t,e,n,s=0,i=1){return s+(t-e)/(n-e)*(i-s)}const i=Symbol("Comlink.proxy"),r=Symbol("Comlink.endpoint"),a=Symbol("Comlink.releaseProxy"),o=Symbol("Comlink.finalizer"),c=Symbol("Comlink.thrown"),h=t=>"object"==typeof t&&null!==t||"function"==typeof t,f=new Map([["proxy",{canHandle:t=>h(t)&&t[i],serialize(t){const{port1:e,port2:n}=new MessageChannel;return u(t,e),[n,[n]]},deserialize:t=>(t.start(),v(t,[],undefined))}],["throw",{canHandle:t=>h(t)&&c in t,serialize({value:t}){let e;return e=t instanceof Error?{isError:!0,value:{message:t.message,name:t.name,stack:t.stack}}:{isError:!1,value:t},[e,[]]},deserialize(t){if(t.isError)throw Object.assign(new Error(t.value.message),t.value);throw t.value}}]]);function u(t,e=globalThis,n=["*"]){e.addEventListener("message",(function s(r){if(!r||!r.data)return;if(!function(t,e){for(const n of t){if(e===n||"*"===n)return!0;if(n instanceof RegExp&&n.test(e))return!0}return!1}(n,r.origin))return void console.warn(`Invalid origin '${r.origin}' for comlink proxy`);const{id:a,type:h,path:f}=Object.assign({path:[]},r.data),d=(r.data.argumentList||[]).map(x);let p;try{const e=f.slice(0,-1).reduce(((t,e)=>t[e]),t),n=f.reduce(((t,e)=>t[e]),t);switch(h){case"GET":p=n;break;case"SET":e[f.slice(-1)[0]]=x(r.data.value),p=!0;break;case"APPLY":p=n.apply(e,d);break;case"CONSTRUCT":p=function(t){return Object.assign(t,{[i]:!0})}(new n(...d));break;case"ENDPOINT":{const{port1:e,port2:n}=new MessageChannel;u(t,n),p=E(e,[e])}break;case"RELEASE":p=void 0;break;default:return}}catch(t){p={value:t,[c]:0}}Promise.resolve(p).catch((t=>({value:t,[c]:0}))).then((n=>{const[i,r]=w(n);e.postMessage(Object.assign(Object.assign({},i),{id:a}),r),"RELEASE"===h&&(e.removeEventListener("message",s),l(e),o in t&&"function"==typeof t[o]&&t[o]())})).catch((t=>{const[n,s]=w({value:new TypeError("Unserializable return value"),[c]:0});e.postMessage(Object.assign(Object.assign({},n),{id:a}),s)}))})),e.start&&e.start()}function l(t){(function(t){return"MessagePort"===t.constructor.name})(t)&&t.close()}function d(t){if(t)throw new Error("Proxy has been released and is not useable")}function p(t){return C(t,{type:"RELEASE"}).then((()=>{l(t)}))}const g=new WeakMap,m="FinalizationRegistry"in globalThis&&new FinalizationRegistry((t=>{const e=(g.get(t)||0)-1;g.set(t,e),0===e&&p(t)}));function v(t,e=[],n=function(){}){let s=!1;const i=new Proxy(n,{get(n,r){if(d(s),r===a)return()=>{!function(t){m&&m.unregister(t)}(i),p(t),s=!0};if("then"===r){if(0===e.length)return{then:()=>i};const n=C(t,{type:"GET",path:e.map((t=>t.toString()))}).then(x);return n.then.bind(n)}return v(t,[...e,r])},set(n,i,r){d(s);const[a,o]=w(r);return C(t,{type:"SET",path:[...e,i].map((t=>t.toString())),value:a},o).then(x)},apply(n,i,a){d(s);const o=e[e.length-1];if(o===r)return C(t,{type:"ENDPOINT"}).then(x);if("bind"===o)return v(t,e.slice(0,-1));const[c,h]=b(a);return C(t,{type:"APPLY",path:e.map((t=>t.toString())),argumentList:c},h).then(x)},construct(n,i){d(s);const[r,a]=b(i);return C(t,{type:"CONSTRUCT",path:e.map((t=>t.toString())),argumentList:r},a).then(x)}});return function(t,e){const n=(g.get(e)||0)+1;g.set(e,n),m&&m.register(t,e,t)}(i,t),i}function b(t){const e=t.map(w);return[e.map((t=>t[0])),(n=e.map((t=>t[1])),Array.prototype.concat.apply([],n))];var n}const y=new WeakMap;function E(t,e){return y.set(t,e),t}function w(t){for(const[e,n]of f)if(n.canHandle(t)){const[s,i]=n.serialize(t);return[{type:"HANDLER",name:e,value:s},i]}return[{type:"RAW",value:t},y.get(t)||[]]}function x(t){switch(t.type){case"HANDLER":return f.get(t.name).deserialize(t.value);case"RAW":return t.value}}function C(t,e,n){return new Promise((s=>{const i=new Array(4).fill(0).map((()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16))).join("-");t.addEventListener("message",(function e(n){n.data&&n.data.id&&n.data.id===i&&(t.removeEventListener("message",e),s(n.data))})),t.start&&t.start(),t.postMessage(Object.assign({id:i},e),n)}))}var k=n(33256);const A=new class{constructor(t){this.chars={},this.kernings=[],this.capHeight=0,this.xHeight=0,this.ascenderHeight=0,this.descenderHeight=0,this.font=t,t.chars.forEach((e=>{const n=e.x/t.common.scaleW,s=e.y/t.common.scaleH,i=(e.x+e.width)/t.common.scaleW,r=(e.y+e.height)/t.common.scaleH;this.chars[e.id]={width:e.width/t.info.size,height:e.height/t.info.size,xAdvance:e.xadvance/t.info.size,xOffset:e.xoffset/t.info.size,yOffset:e.yoffset/t.info.size,page:e.page,id:e.id,uvs:[n,s,i,r]}})),this.kernings=t.kernings.map((e=>({first:e.first,second:e.second,amount:e.amount/t.info.size}))),this.wrapper=new e({font:t,useKernings:!0}),this.baselineOffset=this.font.common.base/this.font.info.size,this.computeMetrics()}layout(t){const{text:e,width:n,noWrap:i,letterSpacing:r=0,lineHeight:a=this.font.common.lineHeight/this.font.info.size,tabWidth:o=1,xShift:c=-this.font.info.padding[3]/this.font.info.size,align:h="left",computeLineY:f=!1,computeCharUvs:u=!1,computeCharIndex:l=!1,computeLineIndex:d=!1}=t,p=this.font.info.padding[0]/this.font.info.size,g=(i?e:this.wrapper.wrap({text:e,width:n,letterSpacing:r,tabWidth:o})).split("\n"),m=[],v=[],b=[],y=[],E=[],w=[],x=[];let C=0,k=0;return g.forEach(((t,e)=>{const i=n-this.wrapper.measure(t),g=t.match(/\u0020|\u00A0/gm),A=i/(g?g.length:1);let z,H=0;"right"===h?H=i:"center"===h&&(H=i/2),t.split("").forEach((t=>{const n=t.charCodeAt(0),i=this.chars[n];if("justify"!==h||32!==n&&160!==n||(H+=A),9===n)H+=o;else if(i){if(z){const t=this.kernings.find((t=>t.first===z.id&&t.second===i.id));t&&(H+=t.amount),H+=r}const t=i.yOffset-this.baselineOffset-p,n=i.yOffset+i.height-this.baselineOffset-p;if(f){const e=s(t,-this.ascenderHeight,this.descenderHeight),i=s(n,-this.ascenderHeight,this.descenderHeight);y.push(e,e,i,i)}u&&E.push(0,1,1,1,0,0,1,0),l&&w.push(k,k,k,k),d&&x.push(e,e,e,e);const o=H+i.xOffset+c,h=H+i.xOffset+i.width+c,g=-e*a-t,A=-e*a-n;m.push(o,g,h,g,o,A,h,A),v.push(i.uvs[0],i.uvs[1],i.uvs[2],i.uvs[1],i.uvs[0],i.uvs[3],i.uvs[2],i.uvs[3]),b.push(C,C+2,C+1,C+1,C+2,C+3),C+=4,k+=1,H+=i.xAdvance,z=i}}))})),{verts:m,uvs:v,indices:b,lineY:y,charUvs:E,charIndices:w,lineIndices:x,charCount:k+1,lineCount:g.length}}computeMetrics(){const t="HXNTKM".split(""),e="xvwz".split(""),n=this.font.info.padding[0]/this.font.info.size,s=this.font.info.padding[2]/this.font.info.size,i=(t,e=!0)=>{let i=0;return t.forEach((t=>{const r=t.charCodeAt(0),a=this.chars[r];if(a){const t=a.height+a.yOffset-this.baselineOffset,r=a.height-t;i=Math.max(i,e?r:t-s-n)}})),i};this.capHeight=i(t),this.xHeight=i(e),this.ascenderHeight=i(this.font.info.charset),this.descenderHeight=i(this.font.info.charset,!1)}}(k.L);u((function(t,e,n,s){const{verts:i,uvs:r,indices:a}=A.layout({text:t,align:e,width:n,letterSpacing:s,lineHeight:1.5}),o={verts:Float32Array.from(i),uvs:Float32Array.from(r),indices:Uint16Array.from(a)};return E(o,Object.values(o).map((t=>t.buffer)))}))})()})();